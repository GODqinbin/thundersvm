set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
#file(GLOB_RECURSE SRC *)
file(GLOB SRC model/*.cpp solver/*.cpp util/*.cpp *.cpp)
list(REMOVE_ITEM SRC "${CMAKE_CURRENT_LIST_DIR}/${PROJECT_NAME}-train.cpp")
list(REMOVE_ITEM SRC "${CMAKE_CURRENT_LIST_DIR}/${PROJECT_NAME}-predict.cpp")
if (USE_CUDA)
    file(GLOB SRC_KERNEL kernel/*.cu)
    list(APPEND SRC ${SRC_KERNEL})
    cuda_add_library(${PROJECT_LIB_NAME} SHARED ${SRC})
    target_link_libraries(${PROJECT_LIB_NAME} ${CUDA_cusparse_LIBRARY})
    cuda_add_executable(${PROJECT_NAME}-train thundersvm-train.cpp ${SRC} ${COMMON_INCLUDES})
    cuda_add_executable(${PROJECT_NAME}-predict thundersvm-predict.cpp ${SRC} ${COMMON_INCLUDES})
else ()
    file(GLOB SRC_KERNEL kernel/*.cpp)
    list(APPEND SRC ${SRC_KERNEL})
    add_library(${PROJECT_LIB_NAME} SHARED ${SRC})
    add_executable(${PROJECT_NAME}-train thundersvm-train.cpp ${SRC} ${COMMON_INCLUDES})
    add_executable(${PROJECT_NAME}-predict thundersvm-predict.cpp ${SRC} ${COMMON_INCLUDES})
endif ()

#set(LINK_LIBRARY "${LINK_LIBRARY} memkind")
target_link_libraries(${PROJECT_NAME}-train ${LINK_LIBRARY})
target_link_libraries(${PROJECT_NAME}-predict ${LINK_LIBRARY})
